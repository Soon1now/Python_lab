# Generated by Django 5.0.2 on 2025-05-29 11:51

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Courses',
            fields=[
                ('id_course', models.AutoField(primary_key=True, serialize=False)),
                ('course_name', models.CharField(blank=True, max_length=100, null=True)),
                ('language_programming', models.CharField(blank=True, max_length=50, null=True)),
                ('dfficulty_level', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('duraction', models.IntegerField(blank=True, help_text='Длительность курса в месяцах', null=True)),
                ('price', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'courses',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Students',
            fields=[
                ('id_student', models.AutoField(primary_key=True, serialize=False)),
                ('count_course', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'students',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Teachers',
            fields=[
                ('id_teacher', models.AutoField(primary_key=True, serialize=False)),
                ('experience', models.IntegerField(blank=True, null=True)),
                ('rating', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'teachers',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id_user', models.AutoField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(blank=True, max_length=50, null=True)),
                ('last_name', models.CharField(blank=True, max_length=50, null=True)),
                ('number_phone', models.CharField(blank=True, max_length=11, null=True)),
                ('role', models.CharField(blank=True, max_length=20, null=True)),
                ('password', models.CharField(blank=True, max_length=128, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True)),
                ('patronymic', models.CharField(blank=True, max_length=50, null=True)),
                ('reset_token', models.CharField(blank=True, max_length=100, null=True)),
                ('reset_token_created', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'users',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Lessons',
            fields=[
                ('id_lesson', models.AutoField(primary_key=True, serialize=False)),
                ('topic', models.CharField(blank=True, max_length=255, null=True)),
                ('video_url', models.CharField(blank=True, max_length=255, null=True)),
                ('lesson_number', models.IntegerField(blank=True, null=True)),
                ('status', models.BooleanField(blank=True, null=True)),
                ('id_course', models.ForeignKey(blank=True, db_column='id_course', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='main.courses')),
            ],
            options={
                'db_table': 'lessons',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RecordsStudents',
            fields=[
                ('id_records_students', models.AutoField(primary_key=True, serialize=False)),
                ('status', models.BooleanField(blank=True, null=True)),
                ('id_course', models.ForeignKey(blank=True, db_column='id_course', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='main.courses')),
                ('id_student', models.ForeignKey(blank=True, db_column='id_student', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='main.students')),
            ],
            options={
                'db_table': 'records_students',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Tasks',
            fields=[
                ('id_task', models.AutoField(primary_key=True, serialize=False)),
                ('topic', models.CharField(blank=True, max_length=255, null=True)),
                ('content_task', models.TextField(blank=True, null=True)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('id_lesson', models.ForeignKey(blank=True, db_column='id_lesson', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='main.lessons')),
            ],
            options={
                'db_table': 'tasks',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TaskExecution',
            fields=[
                ('id_task_execution', models.AutoField(primary_key=True, serialize=False)),
                ('execution', models.TextField(blank=True, null=True)),
                ('grade', models.IntegerField(blank=True, null=True)),
                ('comment_teacher', models.CharField(blank=True, max_length=150, null=True)),
                ('id_student', models.ForeignKey(blank=True, db_column='id_student', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='main.students')),
                ('id_task', models.ForeignKey(blank=True, db_column='id_task', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='main.tasks')),
                ('id_teacher', models.ForeignKey(blank=True, db_column='id_teacher', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='main.teachers')),
            ],
            options={
                'db_table': 'task_execution',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RecordsTeachers',
            fields=[
                ('id_record_teacher', models.AutoField(primary_key=True, serialize=False)),
                ('status', models.BooleanField(blank=True, null=True)),
                ('id_course', models.ForeignKey(blank=True, db_column='id_course', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='main.courses')),
                ('id_teacher', models.ForeignKey(blank=True, db_column='id_teacher', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='main.teachers')),
            ],
            options={
                'db_table': 'records_teachers',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='GradeTeacher',
            fields=[
                ('gradeteacherid', models.AutoField(primary_key=True, serialize=False)),
                ('grade', models.IntegerField(blank=True, null=True)),
                ('studentid', models.ForeignKey(blank=True, db_column='studentid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='main.students')),
                ('teacherid', models.ForeignKey(blank=True, db_column='teacherid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='main.teachers')),
            ],
            options={
                'db_table': 'grade_teacher',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='courses',
            name='id_teacher',
            field=models.ForeignKey(blank=True, db_column='id_teacher', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='main.teachers'),
        ),
        migrations.AddField(
            model_name='teachers',
            name='id_user',
            field=models.ForeignKey(blank=True, db_column='id_user', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='main.users'),
        ),
        migrations.AddField(
            model_name='students',
            name='is_user',
            field=models.ForeignKey(blank=True, db_column='is_user', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='main.users'),
        ),
    ]
